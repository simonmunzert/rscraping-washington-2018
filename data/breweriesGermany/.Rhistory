# load packages
library(rvest)
library(stringr)
library(ggmap)
url <- "http://www.biermap24.de/brauereiliste.php"
browseURL(url)
content <- read_html(url)
anchors <- html_nodes(content, xpath = "//tr/td[2]")
cities <- html_text(anchors)
cities
cities <- str_trim(cities)
cities <- cities[str_detect(cities, "^[[:upper:]]+.")]
length(cities)
length(unique(cities))
sort(table(cities))
length(cities)
length(unique(cities))
?sort
sort(table(cities), decreasing = TRUE)[1:10]
library(rvest)
library(stringr)
library(ggmap)
## step 1: fetch list of cities with breweries
url <- "http://www.biermap24.de/brauereiliste.php"
browseURL(url)
content <- read_html(url)
anchors <- html_nodes(content, xpath = "//tr/td[2]")
cities <- html_text(anchors)
cities
cities <- str_trim(cities)
cities <- cities[str_detect(cities, "^[[:upper:]]+.")]
length(cities)
length(unique(cities))
sort(table(cities), decreasing = TRUE)[1:10]
cities <- unique(cities)
length(cities)
sort(table(cities), decreasing = TRUE)[1:10]
## step 1: fetch list of cities with breweries
url <- "http://www.biermap24.de/brauereiliste.php"
browseURL(url)
content <- read_html(url)
anchors <- html_nodes(content, xpath = "//tr/td[2]")
cities <- html_text(anchors)
cities
cities <- str_trim(cities)
cities <- cities[str_detect(cities, "^[[:upper:]]+.")]
length(cities)
length(unique(cities))
sort(table(cities), decreasing = TRUE)[1:10]
?geocode
pos <- geocode(unique(cities))
pos
View(pos)
warnings()
geocodeQueryCheck()
library(rvest)
library(stringr)
library(wordcloud)
url <- "http://www.nytimes.com"
html_parsed <- html(url, encoding = "UTF-8")
install.packages("wordcloud")
library(wordcloud)
xpath <- '//*[contains(concat( " ", @class, " " ), concat( " ", "story-heading", " " ))]' # use SelectorGadget to generate XPath expression
headings <- html_nodes(html_parsed, xpath = xpath)
headings <- html_text(headings)
headings
headings <- html_nodes(html_parsed, xpath = xpath) %>% html_text()
headings[1:10]
headings <- str_replace_all(headings, "\\n" , " ") %>% str_trim()
headings
wordcloud(headings)
?wordcloud
library(tidytext)
library(tidytext)
library(wordcloud)
?count
data("stop_words")
View(stop_words)
original_books <- austen_books()
unnest_tokens(headings)
headings()
?unnest_tokens
?wordcloud
data(crude)
install.packages("quanteda")
library(quanteda)
?textplot_wordcloud
tokens(headings)
?textplot_wordcloud
headings_tk <- tokens(headings)
textplot_wordcloud(headings_tk)
View(headings)
headings(headings)
View(stop_words)
?dfm
headings_dfm <- dfm(headings)
View(headings_dfm)
stopwords()
headings_dfm <- dfm(headings, remove = stopwords())
dim(headings_dfm)
textplot_wordcloud(headings_dfm)
headings_dfm <- dfm(headings, remove = stopwords(), remove_punkt = TRUE)
headings_dfm <- dfm(headings, remove = stopwords(), remove_punct = TRUE)
headings_dfm <- dfm(headings, remove = stopwords(), remove_punct = TRUE)
textplot_wordcloud(headings_dfm)
?textplot_wordcloud
# set temporary working directory
tempwd <- ("data/breweriesGermany")
dir.create(tempwd)
setwd(tempwd)
url <- "http://www.biermap24.de/brauereiliste.php"
browseURL(url)
content <- read_html(url)
source("packages.r")
